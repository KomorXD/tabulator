<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    >
    <Style x:Key="ButtonTheme" TargetType="Button">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Width" Value="150" />
        <Setter Property="Height" Value="40" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            CornerRadius="20"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="#d66853" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#7d4e57" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="CloseButtonTheme" TargetType="Button">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ImageBrush x:Key="editlight" ImageSource="../../../Resources/Images/editlight.png"/>
    <ImageBrush x:Key="editdark" ImageSource="../../../Resources/Images/editdark.png"/>
    <Style x:Key="EditButtonTheme" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 0 2 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderThickness="0"
                            Background="{StaticResource editdark}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource editlight}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource editlight}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ImageBrush x:Key="deletelight" ImageSource="../../../Resources/Images/deletelight.png"/>
    <ImageBrush x:Key="deletedark" ImageSource="../../../Resources/Images/deletedark.png"/>
    <Style x:Key="DeleteButtonTheme" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="2 0 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderThickness="0"
                            Background="{StaticResource deletedark}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource deletelight}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource deletelight}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ImageBrush x:Key="addlight" ImageSource="../../../Resources/Images/addlight.png"/>
    <ImageBrush x:Key="adddark" ImageSource="../../../Resources/Images/adddark.png"/>
    <Style x:Key="AddButtonTheme" TargetType="{x:Type ToggleButton}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="2 0 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border"
                            BorderThickness="0"
                            Background="{StaticResource adddark}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource addlight}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource addlight}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ImageBrush x:Key="helplight" ImageSource="../../../Resources/Images/helplight.png"/>
    <ImageBrush x:Key="helpdark" ImageSource="../../../Resources/Images/helpdark.png"/>
    <Style x:Key="HelpButtonTheme" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Margin" Value="0,0,10,10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border"
                            BorderThickness="0"
                            Background="{StaticResource helpdark}">
                        </Border>
                        <Popup x:Name="popupHelp" IsOpen="{Binding IsPopupOpen, Mode=TwoWay}"
                               Placement="Left"
                               VerticalOffset="-100"
                               PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                            <TextBlock x:Name="popupText" Background="White" Foreground="Black" Padding="10"
                                       Text="{TemplateBinding Property=Content}" TextWrapping="Wrap" MaxWidth="600"/>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseDirectlyOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource helplight}"/>
                            <Setter TargetName="popupHelp" Property="IsOpen" Value="True"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource helpdark}"/>
                            <Setter TargetName="popupHelp" Property="IsOpen" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>